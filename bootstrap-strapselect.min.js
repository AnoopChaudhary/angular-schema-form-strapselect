angular.module("schemaForm").run(["$templateCache",function(t){t.put("directives/decorators/bootstrap/strap/strapmultiselect.html",'<div class="form-group" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label" ng-show="showTitle()">{{form.title}}</label><div class="form-group"><button type="button" class="btn btn-default" sf-changed="form" ng-model="$$value$$" schema-validate="form" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\' | translate)}}" data-multiple="1" data-html="1" ng-options="item.value as item.label for item in form.schema.items" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>'),t.put("directives/decorators/bootstrap/strap/strapmultiselectdynamic.html",'<script type="text/javascript">\r\n    angular.module(\'lightApp\').controller(\'StrapSelectController\', [\'$scope\', \'$http\', function ($scope, $http) {\r\n        $scope.getItem = {\r\n            readOnly: true\r\n        };\r\n\r\n        $scope.init = function(category, name) {\r\n          console.log(\'init is called\', name);\r\n          $scope.getItem.category = category;\r\n          $scope.getItem.name = name;\r\n        };\r\n\r\n        $scope.items = [];\r\n\r\n        $scope.fetchResult = function () {\r\n            $http.post(\'http://www.networknt.com/api/rs\', $scope.getItem)\r\n                    .success(function (result, status, headers, config) {\r\n                        $scope.items = result;\r\n                        console.log(\'items\', $scope.items);\r\n                    })\r\n        };\r\n        $scope.fetchResult();\r\n    }]);\r\n</script><div class="form-group" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label" ng-show="showTitle()">{{form.title}}</label><div class="form-group" ng-controller="StrapSelectController" ng-init="init(form.options.category, form.options.name)"><button type="button" class="btn btn-default" sf-changed="form" ng-model="$$value$$" schema-validate="form" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\' | translate)}}" data-multiple="1" data-html="1" ng-options="item.value as item.label for item in items" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>'),t.put("directives/decorators/bootstrap/strap/strapselect.html",'<div class="form-group" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label" ng-show="showTitle()">{{form.title}}</label><div class="form-group"><button type="button" class="btn btn-default" sf-changed="form" ng-model="$$value$$" schema-validate="form" data-placeholder="{{form.placeholder || form.schema.placeholder ||(\'placeholders.select\' | translate)}}" data-html="1" ng-options="item.value as item.label for item in form.schema.items" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>'),t.put("directives/decorators/bootstrap/strap/strapselectdynamic.html",'<script type="text/javascript">\r\n    angular.module(\'lightApp\').controller(\'StrapSelectController\', [\'$scope\', \'$http\', function ($scope, $http) {\r\n        $scope.getItem = {\r\n            readOnly: true\r\n        };\r\n\r\n        $scope.init = function(category, name) {\r\n          console.log(\'init is called\', category);\r\n            $scope.getItem.category = category;\r\n          $scope.getItem.name = name;\r\n        };\r\n\r\n        $scope.items = [];\r\n\r\n        $scope.fetchResult = function () {\r\n            $http.post(\'http://www.networknt.com/api/rs\', $scope.getItem)\r\n                    .success(function (result, status, headers, config) {\r\n                        $scope.items = result;\r\n                        console.log(\'items\', $scope.items);\r\n                    })\r\n        };\r\n        $scope.fetchResult();\r\n    }]);\r\n</script><div class="form-group" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label" ng-show="showTitle()">{{form.title}}</label><div class="form-group" ng-controller="StrapSelectController" ng-init="init(form.options.category, form.options.name)"><button type="button" class="btn btn-default" sf-changed="form" ng-model="$$value$$" schema-validate="form" data-placeholder="{{form.placeholder || form.schema.placeholder ||(\'placeholders.select\' | translate)}}" data-html="1" ng-options="item.value as item.label for item in items" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>')}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(t,e,r){var s=function(e,s,a){if("string"===s.type&&"strapselect"==s.format){var o=t.stdFormObj(e,s,a);return o.key=a.path,o.type="strapselect",a.lookup[r.stringify(a.path)]=o,o}};t.defaults.string.unshift(s);var a=function(e,s,a){if("array"===s.type&&"strapselect"==s.format){var o=t.stdFormObj(e,s,a);return o.key=a.path,o.type="strapmultiselect",a.lookup[r.stringify(a.path)]=o,o}};t.defaults.array.unshift(a);var o=function(e,s,a){if("string"===s.type&&"strapselectdynamic"==s.format){var o=t.stdFormObj(e,s,a);return o.key=a.path,o.type="strapselectdynamic",a.lookup[r.stringify(a.path)]=o,o}};t.defaults.string.unshift(o);var l=function(e,s,a){if("array"===s.type&&"strapselectdynamic"==s.format){var o=t.stdFormObj(e,s,a);return o.key=a.path,o.type="strapmultiselectdynamic",a.lookup[r.stringify(a.path)]=o,o}};t.defaults.array.unshift(l),e.addMapping("bootstrapDecorator","strapselect","directives/decorators/bootstrap/strap/strapselect.html"),e.createDirective("strapselect","directives/decorators/bootstrap/strap/strapselect.html"),e.addMapping("bootstrapDecorator","strapmultiselect","directives/decorators/bootstrap/strap/strapmultiselect.html"),e.createDirective("strapmultiselect","directives/decorators/bootstrap/strap/strapmultiselect.html"),e.addMapping("bootstrapDecorator","strapselectdynamic","directives/decorators/bootstrap/strap/strapselectdynamic.html"),e.createDirective("strapselectdynamic","directives/decorators/bootstrap/strap/strapselectdynamic.html"),e.addMapping("bootstrapDecorator","strapmultiselectdynamic","directives/decorators/bootstrap/strap/strapmultiselectdynamic.html"),e.createDirective("strapmultiselectdynamic","directives/decorators/bootstrap/strap/strapmultiselectdynamic.html")}]);