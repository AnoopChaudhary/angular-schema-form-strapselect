angular.module("schemaForm").run(["$templateCache",function(t){t.put("directives/decorators/bootstrap/strap/strapmultiselect.html",'<script type="text/javascript">\n    angular.module(\'lightApp\').controller(\'selectItemCtrl\', [\'$scope\', \'$http\', function ($scope, $http) {\n        $scope.getItem = {\n            readOnly: true\n        };\n\n        $scope.init = function(category, name) {\n          $scope.getItem.category = category;\n          $scope.getItem.name = name;\n        };\n\n        $scope.items = [];\n\n        $scope.fetchResult = function () {\n            $http.post(\'api/rs\', $scope.getItem)\n                    .success(function (result, status, headers, config) {\n                        $scope.items = result;\n                        console.log(\'items\', $scope.items);\n                    })\n        };\n        $scope.fetchResult();\n    }]);\n</script><div class="form-group" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label" ng-show="showTitle()">{{form.title}}</label><div class="form-group" ng-controller="selectItemCtrl" ng-init="init(form.options.category, form.options.name)"><button type="button" class="btn btn-default" sf-changed="form" ng-model="$$value$$" schema-validate="form" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\' | translate)}}" data-multiple="1" data-html="1" ng-options="item.value as item.id for item in items" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>'),t.put("directives/decorators/bootstrap/strap/strapselect.html",'<script type="text/javascript">\n    angular.module(\'lightApp\').controller(\'selectItemCtrl\', [\'$scope\', \'$http\', function ($scope, $http) {\n        $scope.getItem = {\n            readOnly: true\n        };\n\n        $scope.init = function(category, name) {\n          $scope.getItem.category = category;\n          $scope.getItem.name = name;\n        };\n\n        $scope.items = [];\n\n        $scope.fetchResult = function () {\n            $http.post(\'api/rs\', $scope.getItem)\n                    .success(function (result, status, headers, config) {\n                        $scope.items = result;\n                        console.log(\'items\', $scope.items);\n                    })\n        };\n        $scope.fetchResult();\n    }]);\n</script><div class="form-group" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label" ng-show="showTitle()">{{form.title}}</label><div class="form-group" ng-controller="selectItemCtrl" ng-init="init(form.options.category, form.options.name)"><button type="button" class="btn btn-default" sf-changed="form" ng-model="$$value$$" schema-validate="form" data-placeholder="{{form.placeholder || form.schema.placeholder ||(\'placeholders.select\' | translate)}}" data-html="1" ng-options="item.value as item.id for item in items" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>')}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(t,e,s){var r=function(e,r,o){if("string"===r.type&&"strapselect"==r.format){var a=t.stdFormObj(e,r,o);return a.key=o.path,a.type="strapselect",o.lookup[s.stringify(o.path)]=a,a}};t.defaults.string.unshift(r);var o=function(e,r,o){if("array"===r.type&&"strapselect"==r.format){var a=t.stdFormObj(e,r,o);return a.key=o.path,a.type="strapmultiselect",o.lookup[s.stringify(o.path)]=a,a}};t.defaults.array.unshift(o),e.addMapping("bootstrapDecorator","strapselect","directives/decorators/bootstrap/strap/strapselect.html"),e.createDirective("strapselect","directives/decorators/bootstrap/strap/strapselect.html"),e.addMapping("bootstrapDecorator","strapmultiselect","directives/decorators/bootstrap/strap/strapmultiselect.html"),e.createDirective("strapmultiselect","directives/decorators/bootstrap/strap/strapmultiselect.html")}]);